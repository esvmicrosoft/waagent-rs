name: Build and Release waagent-rs RPM

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x86_64
            container: mcr.microsoft.com/azurelinux/base/core:3.0
            distroname: azl
            rpm_arch: x86_64
          - arch: aarch64
            container: mcr.microsoft.com/azurelinux/base/core:3.0
            distroname: azl
            rpm_arch: aarch64
          - arch: aarch64
            container: almalinux:8
            distroname: alma8
            rpm_arch: aarch64
          - arch: x86_64
            container: almalinux:8
            distroname: alma8
            rpm_arch: x86_64
          - arch: x86_64
            container: almalinux:9
            distroname: alma9
            rpm_arch: x86_64
          - arch: aarch64
            container: almalinux:9
            distroname: alma9
            rpm_arch: aarch64
          - arch: x86_64
            container: almalinux:10
            distroname: alma9
            rpm_arch: x86_64
          - arch: aarch64
            container: almalinux:10
            distroname: alma9
            rpm_arch: aarch64

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Print matrix info
        run: echo "Building for ${{ matrix.arch }} on ${{ matrix.distroname }}"

      - name: Install build dependencies
        run: |
          if [ -x /usr/bin/tdnf ]; then export TOOL="tdnf -y"; export GNUPGHOME=/root/.gnupg
          elif [ -x /usr/bin/dnf ]; then export TOOL="dnf -y"
          elif [ -x /usr/bin/zypper ]; then export TOOL="zypper --non-interactive"; $TOOL install rpm-build wget tar gzip; wget https://raw.githubusercontent.com/rpm-software-management/rpm/master/scripts/spectool
          else echo 'No tool found'; exit 0; fi
          echo "Using as package tool $TOOL"
          $TOOL update
          $TOOL install rpmdevtools gcc ca-certificates pkg-config openssl-devel kernel-headers binutils glibc-devel

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare RPM build environment
        run: |
          rpmdev-setuptree
          cp rpm/*.spec ~/rpmbuild/SPECS/
          spectool -C ~/rpmbuild/SOURCES/ -g ~/rpmbuild/SPECS/waagent-rs.spec

      - name: Build RPM
        run: |
          rpmbuild -ba --nodebuginfo ~/rpmbuild/SPECS/*.spec --target ${{ matrix.rpm_arch }}

      - name: Find built RPM
        id: find_rpm
        run: |
          RPM_PATH=$(find ~/rpmbuild/RPMS -name "*.rpm" | grep -v debuginfo | head -n 1)
          echo "rpm_path=$RPM_PATH" >> $GITHUB_OUTPUT

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: waagent-rs-${{ matrix.arch }}-${{ matrix.distroname }}
          path: ${{ steps.find_rpm.outputs.rpm_path }}

  release:
    needs: build-rpm
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.rpm

#Change log
#    Wed Aug 27 2025 Mitch Tenorio (mitenori@microsoft.com)
#
